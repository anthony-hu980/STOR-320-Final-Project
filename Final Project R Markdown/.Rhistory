k = 10
p = 0.4
x = rbinom(50,k,p)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = length(x)
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = length(x)
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = n
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = n / X_bar
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = n / X_bar
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = n / X_bar
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = n / X_bar
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = n / X_bar
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ** 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ^ 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ^ 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ^ 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ^ 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ^ 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ^ 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ^ 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
k = 10
p = 0.4
x = rbinom(50,k,p)
x
est_kp = function(x){
X_bar = mean(x)
n = length(x)
k_hat = (X_bar ^ 2) / (X_bar - var(x))
p_hat = X_bar / k_hat
return(c(k_hat,p_hat))
}
est_kp(x)
options(scipen=999)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
DATA1=as_tibble(read.csv("April_Occupancy_3.csv"))
DATA2=as_tibble(read.csv("April_Volume_3.csv"))
head(DATA1)
head(DATA2)
length(unique(DATA1$DAY))
unique(DATA1$DAY)
x=c(35,27,28,40)    #DO NOT CHANGE
range=max(x)-min(x) #DO NOT CHANGE
print(range)        #DO NOT CHANGE
DATA1=as_tibble(read.csv("April_Occupancy_3.csv"))
DATA2=as_tibble(read.csv("April_Volume_3.csv"))
head(DATA1)
head(DATA2)
DATA1=as_tibble(read.csv("April_Occupancy_3.csv"))
DATA2=as_tibble(read.csv("April_Volume_3.csv"))
head(DATA1)
head(DATA2)
unique(DATA1$TIME)
DATA1=as_tibble(read.csv("April_Occupancy_3.csv"))
DATA2=as_tibble(read.csv("April_Volume_3.csv"))
head(DATA1)
head(DATA2)
unique(DATA1$DAY)
length(unique(DATA1$DAY))
unique(DATA1$DAY)
A <- DATA1 %>%
mutate(DAYNAME = fct(collapse(DAY,
"M" = c(3, 10, 17, 24),
"T" = c(4, 11, 18, 25),
"W" = c(5, 12, 19, 26),
"Th" = c(6, 13, 20, 27),
"F" = c(7, 14, 21, 28)
)))
length(unique(DATA1$DAY))
unique(DATA1$DAY)
A <- DATA1 %>%
mutate(DAYNAME = fct_collapse(DAY,
"M" = c(3, 10, 17, 24),
"T" = c(4, 11, 18, 25),
"W" = c(5, 12, 19, 26),
"Th" = c(6, 13, 20, 27),
"F" = c(7, 14, 21, 28)
)))
length(unique(DATA1$DAY))
unique(DATA1$DAY)
A <- DATA1 %>%
mutate(DAYNAME = fct_collapse(DAY,
"M" = c(3, 10, 17, 24),
"T" = c(4, 11, 18, 25),
"W" = c(5, 12, 19, 26),
"Th" = c(6, 13, 20, 27),
"F" = c(7, 14, 21, 28)
))
length(unique(DATA1$DAY))
unique(DATA1$DAY)
type(DATA1$DAY)
length(unique(DATA1$DAY))
unique(DATA1$DAY)
as.character(DATA1$DAY)
A <- DATA1 %>%
mutate(DAYNAME = fct_collapse(DAY,
"M" = c(3, 10, 17, 24),
"T" = c(4, 11, 18, 25),
"W" = c(5, 12, 19, 26),
"Th" = c(6, 13, 20, 27),
"F" = c(7, 14, 21, 28)
))
length(unique(DATA1$DAY))
unique(DATA1$DAY)
as.character(DATA1$DAY)
A <- DATA1 %>%
mutate(DAYNAME = fct_collapse(DAY,
"M" = c("3", "10", "17", "24"),
"T" = c("4", "11", "18", "25"),
"W" = c("5", "12", "19", "26"),
"Th" = c("6", "13", "20", "27"),
"F" = c("7", "14", "21", "28")
))
length(unique(DATA1$DAY))
unique(DATA1$DAY)
A <- DATA1 %>%
as.character(DATA1$DAY) %>%
mutate(DAYNAME = fct_collapse(DAY,
"M" = c("3", "10", "17", "24"),
"T" = c("4", "11", "18", "25"),
"W" = c("5", "12", "19", "26"),
"Th" = c("6", "13", "20", "27"),
"F" = c("7", "14", "21", "28")
))
length(unique(DATA1$DAY))
unique(DATA1$DAY)
A <- DATA1 %>%
as.character(DATA1$DAY) %>%
print(DATA1$DAY)
mutate(DAYNAME = fct_collapse(DAY,
"M" = c("3", "10", "17", "24"),
"T" = c("4", "11", "18", "25"),
"W" = c("5", "12", "19", "26"),
"Th" = c("6", "13", "20", "27"),
"F" = c("7", "14", "21", "28")
))
length(unique(DATA1$DAY))
unique(DATA1$DAY)
A <- DATA1 %>%
as.character(DATA1$DAY) %>%
unique(DATA1$DAY) %>%
mutate(DAYNAME = fct_collapse(DAY,
"M" = c("3", "10", "17", "24"),
"T" = c("4", "11", "18", "25"),
"W" = c("5", "12", "19", "26"),
"Th" = c("6", "13", "20", "27"),
"F" = c("7", "14", "21", "28")
))
length(unique(DATA1$DAY))
unique(DATA1$DAY)
A <- DATA1 %>%
as.character(DATA1$DAY)
unique(A$DAY)
length(unique(DATA1$DAY))
unique(DATA1$DAY)
A <- DATA1 %>%
mutate(DAYNAME = fct_collapse(DAY,
"M" = c("3", "10", "17", "24"),
"T" = c("4", "11", "18", "25"),
"W" = c("5", "12", "19", "26"),
"Th" = c("6", "13", "20", "27"),
"F" = c("7", "14", "21", "28")
))
